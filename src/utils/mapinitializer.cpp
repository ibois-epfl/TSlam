#include "utils/mapinitializer.h"
#include "optimization/ippe.h"
#include "basictypes/misc.h"
#include "basictypes/timers.h"
#include "basictypes/debug.h"
#include "basictypes/hash.h"
#include "utils/system.h"
#include <cmath>
#include <opencv2/calib3d/calib3d.hpp>
#include<thread>
#include "basictypes/osadapter.h"

 using

 namespace

     std ;

 namespace

ucoslam
 {
 void

   MapInitializer ::

    setParams (

 Params &_2654435881 )

 {

     _params =

 _2654435881 ;

 }

 void

  MapInitializer ::

     reset ()

   {

    _9860761537440310106.clear ()

 ;

     _refFrame.clear ()

      ;

 }

 bool
   MapInitializer ::

     process (

 const Frame &frame, std ::

 shared_ptr <

         Map >
        _11093822290287 )
 {

     if(

frame.und_kpts.size ()
        <
   10 &&
     _params.mode ==
KEYPOINTS ) return
       false ;

     if

          (

 _params.allowArucoOneFrame )

         if

    (

     _7274126694617365277 (

frame,_11093822290287 )

  )
        {

             return

true ;

         }

     if
        (

          !

        _refFrame.isValid ()
        )

  {

        setReferenceFrame (

    frame )

         ;
         return
       false ;

     }

    else {

         bool

     _11093822302335 =
     initialize_ (

frame, _11093822290287 )

          ;

         if(

   !

 _11093822302335 )

   {

             int

   _12854874829121162896 =

    0 ;

             for(
auto _markerObservation:frame.markers )

                 if
      (

      _refFrame.getMarkerIndex (

_markerObservation.id )

    !=

-1 )
   _12854874829121162896 ++
 ;
             if

     ( _9860761537440310106.size ()
     <

 50 &&
      _12854874829121162896 ==

  0 )
      {

                setReferenceFrame (

 frame )

     ;
             }

         }

         return

 _11093822302335 ;

     }

 }

 void

    MapInitializer :: setReferenceFrame (
   const Frame &frame )

  {

    _9860761537440310106.clear ()
   ;

    frame.copyTo (

     _refFrame )

  ;

     if
  (

 _params.mode !=

 ARUCO &&

 frame.ids.size ()

     !=

0 )

   {

         fmatcher.setParams (

 frame,FrameMatcher ::

   MODE_ALL,_params.minDescDistance,_params.nn_match_ratio,true )
      ;

      }
 }

 bool

   MapInitializer ::
     initialize_ (
  const Frame &_3005401603918369727, std ::

 shared_ptr <

    Map >

  _11093822290287 )

        {

     auto

    _9347345574136541271 =

 [

& ]

      ()

   {

        vector <

cv ::

   DMatch >

    _3005399809980531318 ;

        vector <

   cv ::

  Point3f >

   _3005399809980531321 ;

         for(

  size_t _2654435874 =

    0 ;

      _2654435874 <

_9860761537440310106.size ()

   ;

_2654435874 ++

      ) {

             if( isnan (

 _11999208601973379867 [ _2654435874 ]

  .x )

      ||

    isnan (

 _11999208601973379867 [

  _2654435874 ]

   .y )

    ||
   isnan (

     _11999208601973379867 [

  _2654435874 ]
   .z )

    )

             {

                _9860761537440310106 [

     _2654435874 ]

 .trainIdx =

 -1 ;

             }

            else {

                _3005399809980531318.push_back (

    _9860761537440310106 [
       _2654435874 ]
   )
   ;

                _3005399809980531321.push_back (

     _11999208601973379867 [ _2654435874 ]

   )

   ;

             }

         }

        _9860761537440310106 =
_3005399809980531318 ;

        _11999208601973379867 =

  _3005399809980531321 ;

     }
  ;

     if

     (

  !

    _refFrame.isValid ()

   )
    throw std ::

  runtime_error (
  string (

 __PRETTY_FUNCTION__ )

 +R"( invalid reference frame)" )

  ;

     if

     (

   _params.mode !=

  ARUCO &&

     _3005401603918369727.ids.size ()

 >
  0 )

       {

        _9860761537440310106 =

 fmatcher.match (_3005401603918369727,FrameMatcher ::MODE_ALL );

       }

     auto

_6807034019352783248 =

  _9813592252344743680 ( _refFrame, _3005401603918369727, _9860761537440310106,_params.minDistance )

 ;

     if
     (

  _6807034019352783248.first.empty ()

   )
     return false ;

     if(

   _6807034019352783248.second ==

  KEYPOINTS &&

   _9860761537440310106.size ()

 < _params.minNumMatches )

      return

    false ;

    Frame & _16997199184281837438 =

 _11093822290287 -> addKeyFrame (_refFrame )

  ;

     _16997199184281837438.pose_f2g =

     cv ::
      Mat ::
       eye (

4,4,CV_32F )
       ;

    Frame & _16997199184281837433 =
 _11093822290287 -> addKeyFrame (

   _3005401603918369727 )

          ;

     _16997199184281837433.pose_f2g =

         _6807034019352783248.first ;

      for(

  auto &_3005399795337363304:_16997199184281837438.markers )

    {

         _11093822290287 ->

 addMarker (
    _3005399795337363304 )

  ;

        _11093822290287 ->

      addMarkerObservation (
  _3005399795337363304.id,_16997199184281837438.idx )

          ;

     }

      for(

  auto &_3005399795337363304:_16997199184281837433.markers )

  {
        _11093822290287 ->

  addMarker (

   _3005399795337363304 )

         ;

        _11093822290287 ->

addMarkerObservation (

    _3005399795337363304.id,_16997199184281837433.idx )
        ;

     }

      if(

 _6807034019352783248.second ==

KEYPOINTS )
       {

     }

    else {

         if
   (

     _3005401603918369727.ids.size () >
     0 &&
  _refFrame.ids.size ()

  > 0 )

   {

            _9860761537440310106 =

        fmatcher.matchEpipolar (

   _3005401603918369727,FrameMatcher ::

MODE_ALL,_6807034019352783248.first )

    ;

            _11999208601973379867 =
   ucoslam ::

    Triangulate (
     _refFrame,_3005401603918369727,_6807034019352783248.first,_9860761537440310106 )

      ;

            _9347345574136541271 ()
     ;
         }

     }

     for(

   auto _markerObservation:_4498230092506100729 )

 {

        cout <<
      "\x6d\x6d\x20\x3a" <<

_markerObservation.first <<
"\x20" <<
_markerObservation.second <<

    endl ;
        _11093822290287 -> map_markers [

 _markerObservation.first ]

.pose_g2m =

    _markerObservation.second ;

     }

     for(

 size_t _2654435874 =

  0 ;
  _2654435874 <
     _9860761537440310106.size ()

     ;

     _2654435874 ++

 )

 {

         if

 ( !

isnan (
     _11999208601973379867 [

  _2654435874 ]

 .x ) )
       {

             auto

  &_175247759380 =
       _11093822290287 ->
  addNewPoint (
       _16997199184281837433.fseq_idx )

        ;

            _175247759380.kfSinceAddition =
    1 ;

            _175247759380.setCoordinates (
        _11999208601973379867 [

     _2654435874 ]

  )
    ;

            _11093822290287 ->

addMapPointObservation (

  _175247759380.id,_16997199184281837438.idx,_9860761537440310106 [
 _2654435874 ]

   .trainIdx )

   ;

            _11093822290287 ->

    addMapPointObservation (
  _175247759380.id,_16997199184281837433.idx,_9860761537440310106 [

 _2654435874 ]

.queryIdx )

    ;

         }

     }
     return

 true ;

 }

std ::
       pair <

    cv ::
 Mat,MapInitializer ::

MODE >

  MapInitializer ::

 _9813592252344743680 (

    const Frame &_3005401603918369712, const Frame &_3005401603918369727, vector <

cv ::

  DMatch > &_6807036698572949990, float
  _1686524438688096954 )

    {

     if

    (

_3005401603918369712.und_kpts.size ()

  == 0 &&

    _params.mode ==

 KEYPOINTS )

           return

  {

   cv ::
 Mat () ,NONE }

 ;

     if
 (

   _3005401603918369727.und_kpts.size () ==

    0 &&

  _params.mode ==

     KEYPOINTS )
        return

    {

     cv ::

       Mat ()

 ,NONE }

      ;

     if

    (
     _3005401603918369712.markers.size ()

        == 0 &&

   _params.mode ==

         ARUCO )

       return
  {

   cv ::
 Mat () ,NONE }

   ;

     if

        (

 _3005401603918369727.markers.size ()

     ==

0 &&

  _params.mode ==

  ARUCO )

           return
   {

cv ::
     Mat ()

,NONE }

 ;

     if (

  _3005401603918369712.und_kpts.size ()

  ==
    0 &&

 _3005401603918369712.markers.size ()

   ==

    0 )

             return

   {

 cv ::
       Mat ()

    ,NONE } ;

     if

         (
      _3005401603918369727.und_kpts.size ()
        ==

0 &&

   _3005401603918369727.markers.size ()

   ==

 0 )
        return

    {

cv ::

  Mat ()

       ,NONE }

      ;

     if
    (

         !

   _3005401603918369712.imageParams.isValid ()
   )

     throw std ::

 runtime_error (
     string (

  __PRETTY_FUNCTION__ )

  +"\x4e\x65\x65\x64\x20\x74\x6f\x20\x63\x61\x6c\x6c\x20\x73\x65\x74\x50\x61\x72\x61\x6d\x73\x20\x74\x6f\x20\x73\x65\x74\x20\x74\x68\x65\x20\x63\x61\x6d\x65\x72\x61\x20\x70\x61\x72\x61\x6d\x73\x20\x66\x69\x72\x73\x74" )

   ;

     if

  (

    _params.markerSize <=
0 )

 throw std ::

 runtime_error (

        string (

       __PRETTY_FUNCTION__ )

 +"\x49\x6e\x76\x61\x6c\x69\x64\x20\x6d\x61\x72\x6b\x65\x72\x20\x73\x69\x7a\x65" )

     ;

     if

   (
_params.mode ==

    BOTH ||

  _params.mode ==

       ARUCO ) {

         auto

_175247759708 =

    ARUCO_initialize ( _3005401603918369712.markers,_3005401603918369727.markers,_3005401603918369712.imageParams.undistorted ()

     ,_params.markerSize,0.02,_params.max_makr_rep_err,_params.minDistance,_4498230092506100729 )

 ;

         if (
      !
     _175247759708.empty () )

                 return {

      _175247759708,ARUCO }

 ;
     }

     if

       (

  _params.mode ==

 BOTH ||

  _params.mode ==

    KEYPOINTS )
      {

        cv :: Mat _11093821901392,_2654435885 ;
        vector <

 cv ::

   Point3f >
 _11093822296219 ;

        vector < bool >

    _46082576203004608 ;

         if(

     _11671783024730682148 (

       _3005401603918369712.imageParams.CameraMatrix,_3005401603918369712.und_kpts,_3005401603918369727.und_kpts,_6807036698572949990,_11093821901392,_2654435885,_11093822296219,_46082576203004608 )

   )

   {

            cv ::
    Mat _11093821901330 =

         cv ::

       Mat ::
  eye (

   4,4,CV_32F )
       ;

            _11093821901392.copyTo (
  _11093821901330.colRange (

  0,3 )

     .rowRange (

  0,3 )

   )
      ;
            _2654435885 *=

       _1686524438688096954 ;
            _2654435885.copyTo (

    _11093821901330.rowRange (

  0,3 )

 .colRange (

3,4 )

       )

    ;

             return

 { _11093821901330,KEYPOINTS }
 ;

         }

     }

     return

 {

 cv ::

    Mat ()

 ,NONE } ;

 }

MapInitializer ::

        MapInitializer ( float

   _46082543171087264, int

  _18204643580383888731 )

 {

    _10193178724179165899 =

         _46082543171087264 ;

    _994360216124235670 =

     _46082543171087264*_46082543171087264 ;

    _3513368080762767352 =

 _18204643580383888731 ;

 }

 bool
  MapInitializer ::

      _11671783024730682148 (

const cv ::

    Mat &_1646854292500902885,const std ::

     vector <

        cv ::
 KeyPoint > & _594645163826321276,
                                      const std ::

    vector <

   cv ::
      KeyPoint > &_16987994083097500267, vector <

 cv ::

   DMatch >

 &_5507076421631549640, cv ::
       Mat &_11093821901461, cv ::

         Mat &_11093822381707,
                                      vector <

         cv ::
 Point3f >

 &_706246337618936, vector <

    bool > &_1883142761634074017 )

 {

     if

  ( _5507076421631549640.size ()

   <

 _params.minNumMatches )

 return false ;

    _8168161081211572021 =

 _1646854292500902885.clone ()

    ;

    _994360233184819249 =
     _594645163826321276 ;

    _994360233184819248 =

    _16987994083097500267 ;

    _7917477704619030428.clear ()

    ;
    _7917477704619030428.reserve (

  _994360233184819248.size ()

      )

  ;

     for(

      auto _markerObservation:_5507076421631549640 )

        _7917477704619030428.push_back ( make_pair (

    _markerObservation.trainIdx,_markerObservation.queryIdx )

   )

   ;

    const int

_2654435847 =

 _7917477704619030428.size ()

        ;

    vector <

   size_t > _14217074617584083842 ;

    _14217074617584083842.reserve (

       _2654435847 )

 ;

    vector <

     size_t >

  _8060054801680167475 ;

     for(

int _2654435874 =

      0 ;

 _2654435874 <

    _2654435847 ;
      _2654435874 ++

        )

        _14217074617584083842.push_back (

_2654435874 )

     ;

    _10193178724467558310 =

        vector < vector <

    size_t >

      >

     (

  _3513368080762767352,vector <

    size_t >

       (

    8,0 )

  )

      ;

    srand (

   0 )

   ;

     for( int _175247760151 =

   0 ; _175247760151 <
   _3513368080762767352 ;
     _175247760151 ++

   )

     {

        _8060054801680167475 =

   _14217074617584083842 ;

         for( size_t _2654435875 =
   0 ;

 _2654435875 <
     8 ;

    _2654435875 ++ )

         {

             int

 _46082576082856474 =

   rand ()

      % _8060054801680167475.size ()

   ;

             int

_11093822405045 =

  _8060054801680167475 [
   _46082576082856474 ]
     ;

            _10193178724467558310 [

   _175247760151 ]
  [

_2654435875 ]
    =

  _11093822405045 ;

            _8060054801680167475 [
   _46082576082856474 ]

    =

      _8060054801680167475.back ()

    ;

            _8060054801680167475.pop_back ()

  ;

         }

     }

    vector <

  bool >

 _14433965424915739325, _14433965424915739327 ;

     float
     _175247761800, _175247761806 ;

    cv ::

   Mat _2654435841, _2654435839 ;

    thread _6807155497357734564 (

   &MapInitializer ::
_5668215658172178667,this,ref ( _14433965424915739325 )

    , ref (

    _175247761800 )

, ref ( _2654435841 )

  )

   ;

    thread _6807155497357734562 (
       &MapInitializer ::
    _11788074806349018216,this,ref (

         _14433965424915739327 )

     , ref (

      _175247761806 )

   , ref (

 _2654435839 )
  )

 ;

    _6807155497357734564.join ()
     ;

    _6807155497357734562.join ()

      ;

     float
    _175247761736 =

   _175247761800/ (

       _175247761800+_175247761806 )

  ;

     bool _3005399805025936106 =

  false ;

     if(

  _175247761736 >

  0.40 )
        _3005399805025936106 =

   _1187546224459158348 (
   _14433965424915739325,_2654435841,_8168161081211572021,_11093821901461,_11093822381707,_706246337618936,_1883142761634074017,1.0,50 )
     ;

     else

        _3005399805025936106 =

 _1187546224459158354 (
_14433965424915739327,_2654435839,_8168161081211572021,_11093821901461,_11093822381707,_706246337618936,_1883142761634074017,1.0,50 ) ;

     if
   (
      _3005399805025936106 )

  {

         for( auto &_markerObservation:_5507076421631549640 )

             if
    (

 !

  _1883142761634074017 [

 _markerObservation.trainIdx ]
    )
                _markerObservation.queryIdx =
      _markerObservation.trainIdx =

      -1 ;

        remove_unused_matches (

         _5507076421631549640 )

  ;

        _11999208601973379867.reserve (

     _5507076421631549640.size ()

       )

   ;

         for(

      auto &_markerObservation:_5507076421631549640 )

            _11999208601973379867.push_back (

 _706246337618936 [

 _markerObservation.trainIdx ]

 )
    ;

     }

     return

 _3005399805025936106 ;

 }
 void

 MapInitializer ::

   _5668215658172178667 (
       vector <

   bool >

  &_17271253899155467930, float
   &_46082543172245582, cv ::

  Mat &_11093822009278 )

 {

    const int

    _2654435847 =

     _7917477704619030428.size ()

   ;

    vector < cv :: Point2f >

  _706246337605591, _706246337605588 ;

    cv ::

 Mat _175247761824, _175247761827 ;

    _12337435833092867029 (

  _994360233184819249,_706246337605591, _175247761824 )

       ;

    _12337435833092867029 (

 _994360233184819248,_706246337605588, _175247761827 )

  ;

    cv ::

  Mat _46082575930330217 =

      _175247761827.inv ()
  ;

    _46082543172245582 =

     0.0 ;

    _17271253899155467930 =

        vector <

    bool >
       (

 _2654435847,false )

    ;

    vector <

  cv ::
    Point2f >

    _46082576183194624 (

 8 )
   ;

    vector <

cv :: Point2f >

      _46082576183194819 ( 8 )
      ;

    cv ::
 Mat _706246350342703, _706246350346847 ;

    vector <

 bool >

  _1200715365640636762 (

     _2654435847,false )

 ;

     float

      _16104291604305712718 ;

     for(

 int _175247760151 = 0 ;

        _175247760151 <
      _3513368080762767352 ;

   _175247760151 ++
 )

     {

         for(

size_t _2654435875 =

   0 ;
        _2654435875 <

8 ;

 _2654435875 ++

  )

         {

             int

        _11093822405045 = _10193178724467558310 [
   _175247760151 ]
       [

   _2654435875 ]

    ;

            _46082576183194624 [

_2654435875 ]

    =

  _706246337605591 [

_7917477704619030428 [

     _11093822405045 ]

    .first ] ;

            _46082576183194819 [

_2654435875 ]

      =
   _706246337605588 [

   _7917477704619030428 [

        _11093822405045 ]

     .second ]
   ;

         }

        cv ::

 Mat _175247762150 =
     _5082483593203424965 (

_46082576183194624,_46082576183194819 )

     ;

        _706246350342703 =

   _46082575930330217*_175247762150*_175247761824 ;

        _706246350346847 =

  _706246350342703.inv ()
        ;

        _16104291604305712718 =
   _17785459191918434301 (

    _706246350342703, _706246350346847, _1200715365640636762, _10193178724179165899 )
        ;

         if(
      _16104291604305712718 >

        _46082543172245582 )

         {

            _11093822009278 =

        _706246350342703.clone ()

  ;

            _17271253899155467930 =

    _1200715365640636762 ;

            _46082543172245582 =

   _16104291604305712718 ;

         }

     }
 }

 void

MapInitializer ::

 _11788074806349018216 (

 vector <
      bool >
        &_17271253899155467930, float

    &_46082543172245582, cv ::

  Mat &_11093821994570 )

 {

    const int

_2654435847 =

     _17271253899155467930.size ()

 ;

    vector <

         cv ::

    Point2f >

      _706246337605591, _706246337605588 ;

    cv ::

     Mat _175247761824, _175247761827 ;

    _12337435833092867029 (

_994360233184819249,_706246337605591, _175247761824 )

   ;

    _12337435833092867029 (

  _994360233184819248,_706246337605588, _175247761827 )

     ;

    cv ::
   Mat _11093821991670 =

     _175247761827.t ()
  ;

    _46082543172245582 =

          0.0 ;

    _17271253899155467930 =
  vector < bool >

   (

   _2654435847,false )

  ;

    vector <

   cv ::

  Point2f > _46082576183194624 ( 8 )
    ;

    vector <

  cv ::

Point2f >
      _46082576183194819 (

 8 )

      ;

    cv ::

Mat _706246338989182 ;

    vector <

       bool >

  _1200715365640636762 (
 _2654435847,false )

     ;

     float

   _16104291604305712718 ;

     for(

     int _175247760151 =

 0 ;

  _175247760151 <

        _3513368080762767352 ;

        _175247760151 ++

  )

     {

         for(

   int _2654435875 =

    0 ;

    _2654435875 <

 8 ;

          _2654435875 ++

   )

         {

             int

 _11093822405045 =

 _10193178724467558310 [ _175247760151 ]

  [

  _2654435875 ]

      ;

            _46082576183194624 [
    _2654435875 ]

  =

    _706246337605591 [

   _7917477704619030428 [

   _11093822405045 ] .first ]

    ;

            _46082576183194819 [

     _2654435875 ]

  =

          _706246337605588 [

    _7917477704619030428 [

 _11093822405045 ]

.second ]

   ;

         }

        cv ::

   Mat _175247761817 =

  _5082483593203429753 (
   _46082576183194624,_46082576183194819 )

      ;

        _706246338989182 =
    _11093821991670*_175247761817*_175247761824 ;

        _16104291604305712718 = _9516949822686382330 (

_706246338989182, _1200715365640636762, _10193178724179165899 )

          ;
         if(

      _16104291604305712718 >

   _46082543172245582 )

         {

            _11093821994570 =

  _706246338989182.clone ()

      ;

            _17271253899155467930 =

     _1200715365640636762 ;

            _46082543172245582 =
 _16104291604305712718 ;

         }

     }

 }

cv ::

 Mat MapInitializer ::
     _5082483593203424965 (

     const vector <

 cv ::

     Point2f > &_11093821939251, const vector <

  cv ::

Point2f >

     &_11093821939250 )

 {
    const int
      _2654435847 =

       _11093821939251.size ()

   ;

    cv ::

      Mat _2654435834 (
    2*_2654435847,9,CV_32F )

     ;

     for(

   int _2654435874 =
   0 ;

 _2654435874 <
_2654435847 ;

  _2654435874 ++

  )

     {

        const float

  _175247759835 = _11093821939251 [

    _2654435874 ]

  .x ;

        const float

 _175247760922 =

   _11093821939251 [

_2654435874 ]

.y ;

        const float

_175247759832 = _11093821939250 [

 _2654435874 ]

.x ;

        const float

 _175247760921 =

        _11093821939250 [

  _2654435874 ]

    .y ;

        _2654435834.at <

 float >

 (

      2*_2654435874,0 )

       =

  0.0 ;
        _2654435834.at <

float >

      (

    2*_2654435874,1 )

    =

      0.0 ;

        _2654435834.at <
    float >

     (

 2*_2654435874,2 )

    =

         0.0 ;

        _2654435834.at <
   float >

   (

   2*_2654435874,3 )

     =

 -_175247759835 ;

        _2654435834.at <
    float >
       (

 2*_2654435874,4 )

    =

      -_175247760922 ;

        _2654435834.at <

 float >

      (

 2*_2654435874,5 )

    =

          -1 ;

        _2654435834.at <

   float >

        (

2*_2654435874,6 )
   =
       _175247760921*_175247759835 ;

        _2654435834.at <

        float >

      (

 2*_2654435874,7 )

     =

         _175247760921*_175247760922 ;

        _2654435834.at <

   float >

  (
       2*_2654435874,8 )

  =

    _175247760921 ;

        _2654435834.at <

  float >

     (

     2*_2654435874+1,0 ) = _175247759835 ;

        _2654435834.at <

 float > (
     2*_2654435874+1,1 )
  =

 _175247760922 ;

        _2654435834.at <
 float >

    (

 2*_2654435874+1,2 )

    =

     1 ;

        _2654435834.at <

         float >

      (
2*_2654435874+1,3 )

        =

         0.0 ;

        _2654435834.at <

 float > (
  2*_2654435874+1,4 )

  =

      0.0 ;

        _2654435834.at <

  float >
        (

   2*_2654435874+1,5 ) =
      0.0 ;

        _2654435834.at <

 float >
     (

 2*_2654435874+1,6 )

    =

 -_175247759832*_175247759835 ;

        _2654435834.at <

  float >

  (

         2*_2654435874+1,7 )

     =

 -_175247759832*_175247760922 ;

        _2654435834.at <

 float >

 (

        2*_2654435874+1,8 )
  =

 -_175247759832 ;

     }

    cv ::

 Mat _2654435886,_2654435888,_175247760983 ;

    cv ::

    SVDecomp (
   _2654435834,_2654435888,_2654435886,_175247760983,cv ::

    SVD ::

MODIFY_A | cv :: SVD ::
  FULL_UV )

 ;

     return

        _175247760983.row ( 8 )

 .reshape (
     0, 3 )

      ;

 }
cv ::

     Mat MapInitializer :: _5082483593203429753 (

  const vector <

  cv ::

 Point2f >

  &_11093821939251,const vector < cv :: Point2f >
      &_11093821939250 )

 {

    const int

   _2654435847 = _11093821939251.size ()

 ;

    cv ::

   Mat _2654435834 (
      _2654435847,9,CV_32F )

  ;

     for(

    int _2654435874 =
   0 ;

     _2654435874 < _2654435847 ;

    _2654435874 ++ )

     {

        const float
    _175247759835 =
   _11093821939251 [

     _2654435874 ]
.x ;

        const float
    _175247760922 = _11093821939251 [

    _2654435874 ]

       .y ;

        const float

_175247759832 =

  _11093821939250 [
   _2654435874 ]

 .x ;

        const float

    _175247760921 =

 _11093821939250 [

_2654435874 ]

 .y ;

        _2654435834.at <
   float >

      (

 _2654435874,0 ) =
  _175247759832*_175247759835 ;

        _2654435834.at <
      float >

      (

  _2654435874,1 )

    =

     _175247759832*_175247760922 ;

        _2654435834.at <

float >
 (

  _2654435874,2 )

      =

   _175247759832 ;

        _2654435834.at <
   float >

   (
    _2654435874,3 )

     =

  _175247760921*_175247759835 ;

        _2654435834.at <

   float >

      (

_2654435874,4 )

    =

 _175247760921*_175247760922 ;

        _2654435834.at <

      float >

 (

  _2654435874,5 )

   =

    _175247760921 ;

        _2654435834.at <
float >

      (

    _2654435874,6 )
       =

    _175247759835 ;

        _2654435834.at <

   float >

     ( _2654435874,7 )

        = _175247760922 ;

        _2654435834.at <

 float >

 (

  _2654435874,8 )

  =

    1 ;

     }
    cv ::
   Mat _2654435886,_2654435888,_175247760983 ;

    cv ::

    SVDecomp (

 _2654435834,_2654435888,_2654435886,_175247760983,cv ::

SVD ::

     MODIFY_A | cv ::

    SVD ::
      FULL_UV )

       ;

    cv ::

Mat _706246338936712 =

   _175247760983.row (
       8 )

   .reshape (

    0, 3 ) ;
    cv ::
    SVDecomp (

  _706246338936712,_2654435888,_2654435886,_175247760983,cv ::

      SVD ::

MODIFY_A | cv ::

SVD ::

     FULL_UV )
 ;

    _2654435888.at <

   float >

     (

   2 )

       =

  0 ;

     return _2654435886*cv ::

      Mat ::
    diag (

  _2654435888 )

   *_175247760983 ;

 }

 float
    MapInitializer ::

      _17785459191918434301 (
 const cv ::

         Mat &_11093822009278, const cv :: Mat &_11093822009342, vector <

bool >

 &_17271253899155467930, float

  _46082543171087264 )

 {

    const int

   _2654435847 = _7917477704619030428.size ()
     ;

    const float
       _11093822398429 =

  _11093822009278.at <

         float >

    (

     0,0 )

  ;

    const float

       _11093822398428 =
     _11093822009278.at <
  float >

  (

0,1 )

  ;

    const float

      _11093822398403 =

 _11093822009278.at <

  float >

   (

     0,2 )
   ;

    const float

  _11093822398364 =

        _11093822009278.at <
       float >

  (
   1,0 )
 ;

    const float

 _11093822398365 =

 _11093822009278.at <

     float >

       (

 1,1 )

      ;

    const float

   _11093822398338 = _11093822009278.at < float >

      (

       1,2 )

          ;

    const float

       _11093822398298 =

    _11093822009278.at <

    float >

  (

    2,0 )

    ;

    const float
  _11093822398277 =

      _11093822009278.at <

  float >

   (

2,1 )

       ;

    const float

   _11093822398276 =

          _11093822009278.at <
float >

      (

    2,2 )

   ;

    const float
       _3005401529427071630 = _11093822009342.at <

        float > (

  0,0 )
  ;

    const float

  _3005401529421472443 =

 _11093822009342.at <

         float >

     (

  0,1 )

 ;

    const float
       _3005401529537514599 =

     _11093822009342.at <

   float >

 (
    0,2 )
  ;

    const float

    _3005401529370179020 =

          _11093822009342.at <

     float >

  (
  1,0 )

 ;

    const float

 _3005401529369987001 =

   _11093822009342.at <
    float >
 ( 1,1 )

 ;

    const float

   _3005401529351329903 =

     _11093822009342.at <
     float >

    (
    1,2 )

    ;

    const float

  _3005401529527259663 =
        _11093822009342.at <

float > (

      2,0 )

     ;

    const float

 _3005401529502477801 = _11093822009342.at <

        float >

  (

 2,1 )

 ;

    const float

 _3005401529495938372 =
    _11093822009342.at <

     float >

        (

     2,2 )

   ;

    _17271253899155467930.resize (

    _2654435847 )

 ;

     float

         _46082543172245582 =

  0 ;

    const float _175247759809 =

  5.991 ;

    const float

    _9395000106275793626 =

    1.0/ (

     _46082543171087264*_46082543171087264 )

     ;

     for( int _2654435874 =
  0 ;

    _2654435874 < _2654435847 ;
    _2654435874 ++

          )

     {

         bool

 _11093821971816 =

  true ;

        const cv ::

     KeyPoint &_11093822348761 =

  _994360233184819249 [
      _7917477704619030428 [
       _2654435874 ]

     .first ]

 ;

        const cv ::

    KeyPoint &_11093822348742 =

  _994360233184819248 [

     _7917477704619030428 [

      _2654435874 ] .second ]

     ;

        const float

_175247759835 =
        _11093822348761.pt.x ;

        const float

_175247760922 =

      _11093822348761.pt.y ;

        const float

    _175247759832 =

    _11093822348742.pt.x ;

        const float

 _175247760921 =

      _11093822348742.pt.y ;

        const float _16937440141356181747 =
   1.0/ (

   _3005401529527259663*_175247759832+_3005401529502477801*_175247760921+_3005401529495938372 )

      ;

        const float

      _46082543236117216 = (

     _3005401529427071630*_175247759832+_3005401529421472443*_175247760921+_3005401529537514599 ) *_16937440141356181747 ;

        const float

 _46082576205740220 =

     (

    _3005401529370179020*_175247759832+_3005401529369987001*_175247760921+_3005401529351329903 )

 *_16937440141356181747 ;

        const float

  _13812273414234552516 =

   ( _175247759835-_46082543236117216 ) * (

_175247759835-_46082543236117216 )

 + (

_175247760922-_46082576205740220 )

* (

  _175247760922-_46082576205740220 )
     ;

        const float

  _14226755087262694000 =

     _13812273414234552516*_9395000106275793626 ;

         if(
  _14226755087262694000 >

  _175247759809 )

            _11093821971816 =

  false ;

        else
            _46082543172245582 +=

  _175247759809 - _14226755087262694000 ;

        const float

    _16937445645353283937 =

         1.0/ (
_11093822398298*_175247759835+_11093822398277*_175247760922+_11093822398276 )

 ;

        const float
       _46082543234721512 =

      (

     _11093822398429*_175247759835+_11093822398428*_175247760922+_11093822398403 )

    *_16937445645353283937 ;

        const float

 _46082576210450602 =

       (

    _11093822398364*_175247759835+_11093822398365*_175247760922+_11093822398338 )

        *_16937445645353283937 ;
        const float
    _13812273414234552517 =

   (

_175247759832-_46082543234721512 )

* (

  _175247759832-_46082543234721512 )

  + (

      _175247760921-_46082576210450602 )

  * (
_175247760921-_46082576210450602 )

  ;

        const float

  _14226755087262694015 =

     _13812273414234552517*_9395000106275793626 ;

         if(

_14226755087262694015 >

     _175247759809 )

            _11093821971816 =

    false ;

        else
            _46082543172245582 +=

     _175247759809 - _14226755087262694015 ;

         if(

_11093821971816 )

            _17271253899155467930 [

_2654435874 ] =

true ;

        else
            _17271253899155467930 [

 _2654435874 ]

       =
      false ;

     }

     return

     _46082543172245582 ;

 }

 float

 MapInitializer ::

 _9516949822686382330 (

const cv :: Mat &_11093821994570, vector <

  bool >

    &_17271253899155467930, float

    _46082543171087264 )

 {
    const int

 _2654435847 =

   _7917477704619030428.size ()

          ;

    const float

     _11093822386651 =

   _11093821994570.at <
    float >

     (

0,0 )

     ;

    const float

     _11093822386648 =
     _11093821994570.at <
     float >

  (

  0,1 )

  ;

    const float

    _11093822386649 =

 _11093821994570.at <
   float >
 (

 0,2 )
  ;

    const float
    _11093822386584 =

        _11093821994570.at <
      float >

      (

     1,0 )

  ;
    const float

  _11093822386587 =
   _11093821994570.at <
   float >

  (

 1,1 )

    ;
    const float

       _11093822386586 =

    _11093821994570.at <

      float >

      (

      1,2 )

          ;

    const float

 _11093822386521 =
   _11093821994570.at <

float >

  (
   2,0 ) ;

    const float

   _11093822386522 =

    _11093821994570.at <

       float >

       (

2,1 )

  ;

    const float

   _11093822386523 =

    _11093821994570.at <

     float >

   (

 2,2 )

   ;

    _17271253899155467930.resize (

 _2654435847 )

   ;

     float

        _46082543172245582 =

  0 ;
    const float

  _175247759809 =

       3.841 ;

    const float

   _6807155495820199660 =

 5.991 ;

    const float

 _9395000106275793626 =

     1.0/ (

 _46082543171087264*_46082543171087264 )

         ;

     for(

   int _2654435874 = 0 ;
 _2654435874 <
  _2654435847 ;
        _2654435874 ++

      )
     {

         bool

      _11093821971816 =

 true ;

        const cv ::
   KeyPoint &_11093822348761 = _994360233184819249 [
    _7917477704619030428 [

  _2654435874 ]

.first ]
  ;

        const cv ::

 KeyPoint &_11093822348742 =

 _994360233184819248 [

_7917477704619030428 [

    _2654435874 ]

         .second ]
   ;

        const float

 _175247759835 =

  _11093822348761.pt.x ;

        const float

   _175247760922 =

 _11093822348761.pt.y ;

        const float _175247759832 =
       _11093822348742.pt.x ;

        const float

_175247760921 =

  _11093822348742.pt.y ;

        const float _175247762667 =

    _11093822386651*_175247759835+_11093822386648*_175247760922+_11093822386649 ;

        const float
   _175247762730 =

       _11093822386584*_175247759835+_11093822386587*_175247760922+_11093822386586 ;

        const float

       _175247762798 =

  _11093822386521*_175247759835+_11093822386522*_175247760922+_11093822386523 ;

        const float

         _706246333051887 =

    _175247762667*_175247759832+_175247762730*_175247760921+_175247762798 ;

        const float
_13812273414234552516 =
     _706246333051887*_706246333051887/ (
 _175247762667*_175247762667+_175247762730*_175247762730 )

   ;

        const float

   _14226755087262694000 =
        _13812273414234552516*_9395000106275793626 ;

         if(
    _14226755087262694000 >

_175247759809 )

            _11093821971816 =

          false ;

        else
            _46082543172245582 +=
       _6807155495820199660 - _14226755087262694000 ;

        const float

 _175247762666 =
    _11093822386651*_175247759832+_11093822386584*_175247760921+_11093822386521 ;

        const float

 _175247762731 =
      _11093822386648*_175247759832+_11093822386587*_175247760921+_11093822386522 ;

        const float

    _175247762797 =

         _11093822386649*_175247759832+_11093822386586*_175247760921+_11093822386523 ;

        const float _706246333051886 =

 _175247762666*_175247759835+_175247762731*_175247760922+_175247762797 ;

        const float

 _13812273414234552517 =

      _706246333051886*_706246333051886/ (

 _175247762666*_175247762666+_175247762731*_175247762731 )
      ;

        const float

_14226755087262694015 =

 _13812273414234552517*_9395000106275793626 ;
         if(

     _14226755087262694015 >

   _175247759809 )

            _11093821971816 =
  false ;

        else
            _46082543172245582 +=
       _6807155495820199660 - _14226755087262694015 ;

         if(

    _11093821971816 )

            _17271253899155467930 [

  _2654435874 ]
 =

    true ;

        else
            _17271253899155467930 [

    _2654435874 ]
       =

 false ;

     }

     return

    _46082543172245582 ;

 }

 bool

 MapInitializer ::
 _1187546224459158354 (

   vector <

     bool >

          &_17271253899155467930, cv ::

   Mat &_11093821994570, cv ::

 Mat &_2654435844,
                            cv ::

   Mat &_11093821901461, cv ::

     Mat &_11093822381707, vector <
cv ::

       Point3f >

       &_706246337618936, vector <

    bool >

  &_1883142761634074017, float

 _1686011036669914721, int

    _3782192360946256634 )

 {

     int

_2654435847 =

      0 ;

     for(
       size_t _2654435874 =

0, _706246308776244 =

    _17271253899155467930.size ()

   ;

    _2654435874 <

 _706246308776244 ;

       _2654435874 ++

 )

         if(

    _17271253899155467930 [

_2654435874 ]

  )

            _2654435847 ++

     ;

    cv ::

  Mat _11093822702715 = _2654435844.t ()

   *_11093821994570*_2654435844 ;

    cv ::

 Mat _175247761703, _175247761702, _2654435885 ;

    _11668855431419298303 (

        _11093822702715,_175247761703,_175247761702,_2654435885 ) ;

    cv ::

 Mat _175247759768 =
       _2654435885 ;

    cv ::

   Mat _175247759771 =

   -_2654435885 ;

    vector <
cv ::

 Point3f >

  _46082576181793552, _46082576181793553, _46082576181793554, _46082576181793555 ;

    vector < bool >

    _10753448257785030707,_10753448257785030706,_10753448257785030709, _10753448257785030708 ;

     float
    _1516225754718738891,_1516225754718738890, _1516225754718738889, _1516225754718738888 ;

     int
  _3005399802399529536 =

    _993392631849970936 (
_175247761703,_175247759768,_994360233184819249,_994360233184819248,_7917477704619030428,_17271253899155467930,_2654435844, _46082576181793552, 4.0*_994360216124235670, _10753448257785030707, _1516225754718738891 )

 ;

     int
    _3005399802399529537 =

       _993392631849970936 (

     _175247761702,_175247759768,_994360233184819249,_994360233184819248,_7917477704619030428,_17271253899155467930,_2654435844, _46082576181793553, 4.0*_994360216124235670, _10753448257785030706, _1516225754718738890 )
   ;

     int _3005399802399529542 =

 _993392631849970936 (

       _175247761703,_175247759771,_994360233184819249,_994360233184819248,_7917477704619030428,_17271253899155467930,_2654435844, _46082576181793554, 4.0*_994360216124235670, _10753448257785030709, _1516225754718738889 )

 ;

     int _3005399802399529543 =
  _993392631849970936 (

  _175247761702,_175247759771,_994360233184819249,_994360233184819248,_7917477704619030428,_17271253899155467930,_2654435844, _46082576181793555, 4.0*_994360216124235670, _10753448257785030708, _1516225754718738888 )

 ;

     int _6807036690970283909 =

   max (

        _3005399802399529536,max (

  _3005399802399529537,max (

  _3005399802399529542,_3005399802399529543 )

      )

         )

    ;
    _11093821901461 =
    cv ::
Mat () ;

    _11093822381707 =
  cv ::

    Mat ()

  ;

     int

 _16937194945473087812 =
        max ( static_cast <

    int >

      (
 0.9*_2654435847 )

         ,_3782192360946256634 )

   ;

     int
       _16937373785260612085 =

    0 ;

     if(

      _3005399802399529536 >

 0.7*_6807036690970283909 )

        _16937373785260612085 ++

        ;

     if(

_3005399802399529537 >
0.7*_6807036690970283909 )

        _16937373785260612085 ++

   ;

     if(
    _3005399802399529542 >

0.7*_6807036690970283909 )

        _16937373785260612085 ++
        ;

     if(
       _3005399802399529543 >

     0.7*_6807036690970283909 )

        _16937373785260612085 ++

      ;

     if(
     _6807036690970283909 <

    _16937194945473087812 ||

   _16937373785260612085 >
      1 )

     {

         return
false ;

     }

     if( _6807036690970283909 ==

 _3005399802399529536 )

     {

         if(

   _1516225754718738891 >

 _1686011036669914721 )

         {

            _706246337618936 = _46082576181793552 ;

            _1883142761634074017 =

  _10753448257785030707 ;
            _175247761703.copyTo (
_11093821901461 )

  ;

            _175247759768.copyTo (

 _11093822381707 )

    ;

             return

   true ;

         }

     }

  else if(

_6807036690970283909 ==

      _3005399802399529537 )

     {

         if(

_1516225754718738890 >

       _1686011036669914721 )

         {

            _706246337618936 =

 _46082576181793553 ;

            _1883142761634074017 =

  _10753448257785030706 ;

            _175247761702.copyTo (

  _11093821901461 )

 ;

            _175247759768.copyTo (

_11093822381707 )

     ;

             return

         true ;

         }

     }

  else if(

   _6807036690970283909 ==
     _3005399802399529542 )

     {
         if(

   _1516225754718738889 >
    _1686011036669914721 )

         {

            _706246337618936 =

      _46082576181793554 ;

            _1883142761634074017 =

      _10753448257785030709 ;

            _175247761703.copyTo (

  _11093821901461 )
      ;

            _175247759771.copyTo (

 _11093822381707 )

    ;
             return

    true ;

         }

     }

 else if(

    _6807036690970283909 == _3005399802399529543 )
     {

         if(

_1516225754718738888 >

_1686011036669914721 )

         {

            _706246337618936 = _46082576181793555 ;

            _1883142761634074017 =

  _10753448257785030708 ;

            _175247761702.copyTo (
    _11093821901461 )

      ;

            _175247759771.copyTo (

  _11093822381707 )
  ;

             return

    true ;

         }

     }

     return

 false ;

 }
 bool

        MapInitializer ::

 _1187546224459158348 (

     vector <

 bool >

    &_17271253899155467930, cv ::

  Mat &_11093822009278, cv ::

   Mat &_2654435844,
                      cv ::
Mat &_11093821901461, cv ::
Mat &_11093822381707, vector <

   cv ::

    Point3f > &_706246337618936, vector <

   bool >

      &_1883142761634074017, float _1686011036669914721, int
  _3782192360946256634 )

 {

     int

_2654435847 =

0 ;

     for(

size_t _2654435874 =

     0, _706246308776244 =

  _17271253899155467930.size ()

   ;

     _2654435874 <

_706246308776244 ;

     _2654435874 ++

    )

         if(
      _17271253899155467930 [

    _2654435874 ]
  )

            _2654435847 ++

  ;

    cv ::

    Mat _706246308705964 =

   _2654435844.inv ()

 ;

    cv ::

    Mat _2654435834 =

   _706246308705964*_11093822009278*_2654435844 ;

    cv ::

Mat _2654435854,_2654435888,_175247763071,_2654435855 ;

    cv ::
 SVD ::

     compute (

 _2654435834,_2654435888,_2654435854,_175247763071,cv ::

         SVD ::

  FULL_UV )

  ;

    _2654435855 =

        _175247763071.t ()

   ;

     float
       _2654435884 =
       cv ::

       determinant (

   _2654435854 )

  *cv :: determinant (

 _175247763071 )

 ;
     float

_175247762860 =

      _2654435888.at <
  float >

 (

0 )

 ;

     float

_175247762863 =

  _2654435888.at <

float >
        (
       1 )

  ;

     float

_175247762862 =

   _2654435888.at <

float >
       (

 2 )
        ;

     if(

    _175247762860/_175247762863 <

1.00001 ||

   _175247762863/_175247762862 <
     1.00001 )

     {

         return

   false ;

     }

    vector <

cv ::

     Mat >

    _175247761017, _175247760983, _175247760989 ;

    _175247761017.reserve (

    8 )
   ;

    _175247760983.reserve (

  8 )

  ;

    _175247760989.reserve (

        8 )

        ;

     float

 _706246337333900 =

   sqrt (

    (

   _175247762860*_175247762860-_175247762863*_175247762863 )

 / ( _175247762860*_175247762860-_175247762862*_175247762862 )

    )

 ;

     float

        _706246337333938 =

 sqrt (
        (
    _175247762863*_175247762863-_175247762862*_175247762862 ) / (

 _175247762860*_175247762860-_175247762862*_175247762862 )

 )

     ;

     float
  _175247761031 [

  ] =
     {
      _706246337333900,_706246337333900,-_706246337333900,-_706246337333900 }

  ;

     float
      _175247761033 [

         ]

  = {
  _706246337333938,-_706246337333938,_706246337333938,-_706246337333938 }

 ;

     float

     _6864651305897832470 =

  sqrt (

  (

    _175247762860*_175247762860-_175247762863*_175247762863 )

   * (

       _175247762863*_175247762863-_175247762862*_175247762862 )

 )
       / (

 (

  _175247762860+_175247762862 )

        *_175247762863 )

 ;

     float

    _3005399638337628843 = (

 _175247762863*_175247762863+_175247762860*_175247762862 )

    / (

   (

    _175247762860+_175247762862 )

 *_175247762863 )

 ;

     float

_3005401602454656653 [

   ]

  =

   {
       _6864651305897832470, -_6864651305897832470, -_6864651305897832470, _6864651305897832470 }
   ;

     for(

     int _2654435874 =

 0 ;

      _2654435874 <

 4 ;

  _2654435874 ++

     )

     {

        cv ::
    Mat _175247761760 =

   cv ::

     Mat ::

    eye (
       3,3,CV_32F )
 ;

        _175247761760.at <
float >
  ( 0,0 )

    =

   _3005399638337628843 ;

        _175247761760.at <
 float >

  (

     0,2 )
  =
 -_3005401602454656653 [
 _2654435874 ]
       ;

        _175247761760.at <

 float >
 (

 2,0 )

     = _3005401602454656653 [

  _2654435874 ]

     ;

        _175247761760.at <

   float >
     (

    2,2 )
        =

  _3005399638337628843 ;

        cv :: Mat _2654435851 =
    _2654435884*_2654435854*_175247761760*_175247763071 ;

        _175247761017.push_back (

_2654435851 )

 ;

        cv ::
Mat _175247759833 (

 3,1,CV_32F ) ;
        _175247759833.at <

 float >

         ( 0 )
     =

 _175247761031 [

 _2654435874 ]

      ;

        _175247759833.at <

       float >

  (

  1 ) =

    0 ;
        _175247759833.at <

   float >

   (
       2 ) =

   -_175247761033 [
     _2654435874 ]

     ;

        _175247759833 *=
     _175247762860-_175247762862 ;

        cv :: Mat _2654435885 =

 _2654435854*_175247759833 ;

        _175247760983.push_back (

_2654435885/cv ::
 norm (

   _2654435885 )
        )

  ;

        cv ::

    Mat _175247759445 (

   3,1,CV_32F )

       ;

        _175247759445.at <
     float >

         (

         0 )

      =

     _175247761031 [

   _2654435874 ]

 ;

        _175247759445.at <

         float >

         (
1 )

   =

   0 ;

        _175247759445.at <

  float >

  ( 2 )

   =
  _175247761033 [

  _2654435874 ]
       ;

        cv ::
     Mat _2654435879 =

        _2654435855*_175247759445 ;

         if(

  _2654435879.at <
      float >
       (

    2 )
  <

  0 )
            _2654435879 =

       -_2654435879 ;

        _175247760989.push_back (

  _2654435879 )

  ;
     }

     float

    _16937291051106099375 =

 sqrt (
       (
   _175247762860*_175247762860-_175247762863*_175247762863 )

 * (

     _175247762863*_175247762863-_175247762862*_175247762862 )

   )

   / (

  (
    _175247762860-_175247762862 )

      *_175247762863 )

  ;

     float

   _706246351275978 =

      (

_175247762860*_175247762862-_175247762863*_175247762863 )

 / (

  (

 _175247762860-_175247762862 )

*_175247762863 )

  ;

     float

_706246330201782 [

          ]

  =
      {

   _16937291051106099375, -_16937291051106099375, -_16937291051106099375, _16937291051106099375 }
  ;

     for(

  int _2654435874 =
       0 ;

  _2654435874 <
  4 ;
     _2654435874 ++

   )

     {

        cv ::

 Mat _175247761760 =

      cv ::
     Mat ::
    eye (

 3,3,CV_32F )

   ;
        _175247761760.at <

     float >

   (
 0,0 )
  =
      _706246351275978 ;

        _175247761760.at <

float >
     (

  0,2 )

      =

    _706246330201782 [

 _2654435874 ]
     ;

        _175247761760.at <
float >
      (
      1,1 )

    = -1 ;

        _175247761760.at <

float >

 (

        2,0 )
       =

   _706246330201782 [

  _2654435874 ]

 ;
        _175247761760.at <

       float >

     (
  2,2 )
        =

        -_706246351275978 ;

        cv ::

     Mat _2654435851 =
       _2654435884*_2654435854*_175247761760*_175247763071 ;

        _175247761017.push_back (

   _2654435851 )

 ;

        cv ::

         Mat _175247759833 ( 3,1,CV_32F )

 ;

        _175247759833.at <

 float >

   (

  0 )

     = _175247761031 [ _2654435874 ]
 ;

        _175247759833.at < float >

         ( 1 )

     = 0 ;
        _175247759833.at <

      float >

     (

 2 )

       =

_175247761033 [
_2654435874 ]
    ;

        _175247759833 *=

_175247762860+_175247762862 ;

        cv ::

      Mat _2654435885 =

          _2654435854*_175247759833 ;

        _175247760983.push_back (
    _2654435885/cv ::

norm (

         _2654435885 )

      )

       ;

        cv ::

    Mat _175247759445 (

    3,1,CV_32F )

         ;

        _175247759445.at <

   float >
        (
  0 )

  =

   _175247761031 [

    _2654435874 ]

   ;

        _175247759445.at <
float >

     (

        1 ) =

     0 ;

        _175247759445.at <

  float >

     (

 2 )

 =

     _175247761033 [

    _2654435874 ]

  ;

        cv ::

       Mat _2654435879 =

    _2654435855*_175247759445 ;

         if(

   _2654435879.at <

    float >

     ( 2 )
     <
  0 )
            _2654435879 =

  -_2654435879 ;

        _175247760989.push_back (

   _2654435879 )

  ;

     }

     int

  _16940367568810760802 =

   0 ;

     int

    _9505321537286276156 =

    0 ;

     int
_2570993952652048401 =
 -1 ;

     float

      _5965360956970359603 =

   -1 ;

    vector < cv ::

 Point3f >
    _6806984971934296172 ;

    vector <

bool > _13793248373315477956 ;

     for(

  size_t _2654435874 =

 0 ;

     _2654435874 <

8 ;

 _2654435874 ++

    )

     {

         float

   _1516225754718738707 ;

        vector <

        cv :: Point3f >

   _46082576181793496 ;

        vector <
  bool >

 _10753448257785030763 ;
         int

   _46082575790776546 =

        _993392631849970936 (

_175247761017 [
    _2654435874 ]

,_175247760983 [

      _2654435874 ]

 ,_994360233184819249,_994360233184819248,_7917477704619030428,_17271253899155467930,_2654435844,_46082576181793496, 4.0*_994360216124235670, _10753448257785030763, _1516225754718738707 )

  ;

         if(

      _46082575790776546 >
    _16940367568810760802 )

         {

            _9505321537286276156 =

   _16940367568810760802 ;

            _16940367568810760802 =

          _46082575790776546 ;
            _2570993952652048401 =
   _2654435874 ;

            _5965360956970359603 =

    _1516225754718738707 ;

            _6806984971934296172 =

   _46082576181793496 ;

            _13793248373315477956 =
 _10753448257785030763 ;

         }

         else
      if(

_46082575790776546 >

 _9505321537286276156 )

         {

            _9505321537286276156 =

    _46082575790776546 ;

         }
     }

     if(

   _9505321537286276156 < 0.75*_16940367568810760802 &&

   _5965360956970359603 >= _1686011036669914721 &&

  _16940367568810760802 >

_3782192360946256634 &&

     _16940367568810760802 >

   0.9*_2654435847 )
     {

        _175247761017 [
 _2570993952652048401 ]

  .copyTo (
      _11093821901461 )
 ;

        _175247760983 [

       _2570993952652048401 ]

     .copyTo (
     _11093822381707 )

    ;

        _706246337618936 =
 _6806984971934296172 ;

        _1883142761634074017 =

    _13793248373315477956 ;

         return

    true ;

     }

     return
   false ;

 }

 void

 MapInitializer :: _13188689179917490056 (
      const cv ::
 KeyPoint &_11093822348761, const cv ::
    KeyPoint &_11093822348742, const cv ::

      Mat &_175247761573, const cv ::

Mat &_175247761572, cv ::

         Mat &_11093821939030 )

 {
    cv ::

 Mat _2654435834 (

 4,4,CV_32F )
    ;

    _2654435834.row (

  0 )
      =

   _11093822348761.pt.x*_175247761573.row (

        2 )

     -_175247761573.row (
     0 )

  ;
    _2654435834.row (

  1 ) = _11093822348761.pt.y*_175247761573.row (

  2 )

   -_175247761573.row (
 1 )

    ;

    _2654435834.row (

 2 )

      =

   _11093822348742.pt.x*_175247761572.row (

     2 )
       -_175247761572.row ( 0 )

 ;

    _2654435834.row (

  3 )

     = _11093822348742.pt.y*_175247761572.row (

  2 )

 -_175247761572.row (

    1 )
      ;

    cv ::

        Mat _2654435886,_2654435888,_175247760983 ;

    cv ::

    SVD ::

  compute (

    _2654435834,_2654435888,_2654435886,_175247760983,cv ::

  SVD ::

   MODIFY_A| cv ::
       SVD ::

   FULL_UV )

   ;

    _11093821939030 =

 _175247760983.row (

   3 )

    .t ()
 ;

    _11093821939030 =

 _11093821939030.rowRange (

  0,3 )
     /_11093821939030.at <

  float > (

    3 )

          ;

 }

 void

  MapInitializer ::

     _12337435833092867029 (

const vector <

    cv ::

         KeyPoint >

 &_46082576192198777, vector <
  cv ::

     Point2f >

  &_11959346835625416039, cv ::

    Mat &_2654435853 )

 {

     float

_46082575822310300 =
       0 ;

     float

 _46082575822310301 =

  0 ;

    const int

_2654435847 =

  _46082576192198777.size ()

         ;

    _11959346835625416039.resize (
    _2654435847 )

  ;

     for(
 int _2654435874 =

     0 ;

      _2654435874 <

  _2654435847 ;

  _2654435874 ++
 )

     {

        _46082575822310300 +=
   _46082576192198777 [

    _2654435874 ]

    .pt.x ;

        _46082575822310301 +=

  _46082576192198777 [
   _2654435874 ]

.pt.y ;

     }

    _46082575822310300 = _46082575822310300/_2654435847 ;

    _46082575822310301 =
  _46082575822310301/_2654435847 ;
     float
      _16937206910726371261 =
      0 ;

     float
     _16937206910726371262 =

     0 ;
     for( int _2654435874 =

0 ;

    _2654435874 <

 _2654435847 ; _2654435874 ++

 )

     {

        _11959346835625416039 [

  _2654435874 ]

.x =

   _46082576192198777 [
     _2654435874 ]
     .pt.x - _46082575822310300 ;

        _11959346835625416039 [

   _2654435874 ]
     .y =

   _46082576192198777 [

     _2654435874 ]

   .pt.y - _46082575822310301 ;

        _16937206910726371261 +=

      fabs (

       _11959346835625416039 [

_2654435874 ]

  .x )

         ;

        _16937206910726371262 +=

  fabs (
       _11959346835625416039 [
  _2654435874 ]
.y )

     ;

     }

    _16937206910726371261 =
        _16937206910726371261/_2654435847 ;

    _16937206910726371262 =

    _16937206910726371262/_2654435847 ;

     float

_175247759792 =

 1.0/_16937206910726371261 ;
     float

  _175247759793 =

        1.0/_16937206910726371262 ;

     for( int _2654435874 =
   0 ;

 _2654435874 <

   _2654435847 ;

     _2654435874 ++
    )

     {

        _11959346835625416039 [

  _2654435874 ]

     .x =

    _11959346835625416039 [

_2654435874 ]
.x * _175247759792 ;

        _11959346835625416039 [

     _2654435874 ]
  .y =

          _11959346835625416039 [

_2654435874 ]
.y * _175247759793 ;

     }

    _2654435853 =

 cv ::

 Mat ::

    eye (

3,3,CV_32F )

   ;

    _2654435853.at <

       float >

    (

     0,0 ) =

         _175247759792 ;

    _2654435853.at <

float > (

    1,1 )

  =

 _175247759793 ;

    _2654435853.at <

  float > (
      0,2 )
         =

   -_46082575822310300*_175247759792 ;

    _2654435853.at <

 float >
     (

1,2 )

   =

     -_46082575822310301*_175247759793 ;

 }

 int

     MapInitializer ::

       _993392631849970936 (

     const cv ::

     Mat &_2654435851, const cv ::

Mat &_2654435885, const vector <

   cv ::

 KeyPoint >
  &_3005399810348660273, const vector <

 cv ::

      KeyPoint >

        &_3005399810348660272,
                       const vector <

   Match >

   &_5507076421631549640, vector < bool >

 &_17271253899155467930,
                       const cv ::

 Mat &_2654435844, vector <

       cv ::

        Point3f >

  &_706246337618936, float

  _11093822376282, vector <

 bool >
   &_3005399809928654743, float

    &_16937213055926717083 )

 {

    const float

_175247759975 =

   _2654435844.at <

    float >

      (

0,0 )

 ;
    const float

  _175247759974 =
    _2654435844.at <

   float >

     (

  1,1 )

      ;

    const float

         _175247762852 =

 _2654435844.at < float > (

0,2 )

     ;
    const float

     _175247762853 =

 _2654435844.at <
      float >

   (

     1,2 )
     ;

    _3005399809928654743 =

  vector <

      bool >
        ( _3005399810348660273.size ()

    ,false )

 ;

    _706246337618936.resize (

 _3005399810348660273.size ()

  )

      ;

    vector <

   float >

    _5800553007209659840 ;

    _5800553007209659840.reserve (
_3005399810348660273.size ()

     )

  ;

    cv ::

   Mat _175247761573 (
       3,4,CV_32F,cv ::

 Scalar (

 0 )
      ) ;

    _2654435844.copyTo (

   _175247761573.rowRange (

 0,3 ) .colRange (

   0,3 )

     )
    ;

    cv ::

Mat _175247761508 =

     cv ::

 Mat :: zeros (

    3,1,CV_32F )
        ;

    cv ::

        Mat _175247761572 (

    3,4,CV_32F )

  ;

    _2654435851.copyTo (

   _175247761572.rowRange (

0,3 )
     .colRange (

0,3 )

  )

     ;

    _2654435885.copyTo (

_175247761572.rowRange (

    0,3 )
.col (

     3 )

    )

        ;

    _175247761572 =
       _2654435844*_175247761572 ;

    cv ::
   Mat _175247761509 =
    -_2654435851.t ()

  *_2654435885 ;

     int

    _46082575790776546 =

   0 ;

     for( size_t _2654435874 =
     0, _706246308776244 = _5507076421631549640.size ()

  ;

   _2654435874 <

   _706246308776244 ;

 _2654435874 ++

       )

     {

         if(

         !

     _17271253899155467930 [ _2654435874 ]

  )

            continue ;

        const cv ::

    KeyPoint &_11093822348761 =

      _3005399810348660273 [

 _5507076421631549640 [

 _2654435874 ]
  .first ]

 ;

        const cv :: KeyPoint &_11093822348742 =

       _3005399810348660272 [

   _5507076421631549640 [

 _2654435874 ]

  .second ]

 ;

        cv ::

  Mat _46082575776159025 ;

        _13188689179917490056 (

         _11093822348761,_11093822348742,_175247761573,_175247761572,_46082575776159025 )

 ;

         if(

    !

   isfinite (

_46082575776159025.at <

         float > (
  0 ) )
       ||
         !

     isfinite (

  _46082575776159025.at <

float >
   (

1 )

    )
    ||
        !

      isfinite ( _46082575776159025.at <
float >
   ( 2 )

    )

 )

         {

            _3005399809928654743 [
       _5507076421631549640 [

  _2654435874 ]

    .first ]

     =

false ;

            continue ;

         }

        cv ::

   Mat _6807036687918592958 =

 _46082575776159025 - _175247761508 ;

         float

 _46082575013947785 =

    cv ::
 norm (

     _6807036687918592958 ) ;

        cv ::

Mat _6807036687918592959 =
     _46082575776159025 - _175247761509 ;

         float

    _46082575013947784 =

 cv :: norm (
      _6807036687918592959 ) ;

         float

_6065268260414012491 =

 _6807036687918592958.dot (

    _6807036687918592959 )

     / (

_46082575013947785*_46082575013947784 )

         ;

         if(

   _46082575776159025.at <

 float >
 (
   2 )

  <=

     0 &&

     _6065268260414012491 <

 0.99998 )

            continue ;

        cv ::

Mat _46082575776159024 =

     _2654435851*_46082575776159025+_2654435885 ;

         if(

_46082575776159024.at < float >

 (

         2 )
 <=

   0 &&

   _6065268260414012491 <

       0.99998 )

            continue ;

         float _706246308812856, _706246308812859 ;

         float

   _46082544220862540 =

 1.0/_46082575776159025.at <

 float >

  (
     2 )

     ;

        _706246308812856 =
        _175247759975*_46082575776159025.at <

      float >

   (

       0 )

     *_46082544220862540+_175247762852 ;

        _706246308812859 = _175247759974*_46082575776159025.at <

   float > (
  1 )

     *_46082544220862540+_175247762853 ;

         float

_11817497959695576683 =

   (

  _706246308812856-_11093822348761.pt.x )

         * (

   _706246308812856-_11093822348761.pt.x )

+ (

_706246308812859-_11093822348761.pt.y )

* (

     _706246308812859-_11093822348761.pt.y )
     ;

         if(

   _11817497959695576683 >

         _11093822376282 )

            continue ;

         float

  _706246308812923, _706246308812920 ;

         float

  _46082544220862543 =
       1.0/_46082575776159024.at <
float >

     (

  2 )

     ;

        _706246308812923 =

        _175247759975*_46082575776159024.at <

        float >

   (

  0 )
*_46082544220862543+_175247762852 ;

        _706246308812920 =
   _175247759974*_46082575776159024.at <

    float >
    (

  1 )

         *_46082544220862543+_175247762853 ;

         float

  _11817497959695576682 =
        (
_706246308812923-_11093822348742.pt.x )

   * (
     _706246308812923-_11093822348742.pt.x )

   + (

       _706246308812920-_11093822348742.pt.y )

* (
  _706246308812920-_11093822348742.pt.y )

        ;

         if(
      _11817497959695576682 >

 _11093822376282 )

            continue ;

        _5800553007209659840.push_back (

    _6065268260414012491 )

    ;

        _706246337618936 [

   _5507076421631549640 [

_2654435874 ]

    .first ]
      =

     cv :: Point3f (

   _46082575776159025.at < float >

 (
     0 )

   ,_46082575776159025.at <
    float > (

  1 )
,_46082575776159025.at < float >

    (

  2 )
  )

   ;

        _46082575790776546 ++

  ;

         if(

       _6065268260414012491 <

     0.99998 )
            _3005399809928654743 [

 _5507076421631549640 [

     _2654435874 ]

 .first ]

 =

 true ;

     }

     if(

  _46082575790776546 > 0 )

     {

        sort (

     _5800553007209659840.begin ()

 ,_5800553007209659840.end ()

   )

       ;

        size_t _11093822405045 =

 min (
  50,int ( _5800553007209659840.size ()

   -1 )

          )

 ;

        _16937213055926717083 =
    acos (

_5800553007209659840 [
  _11093822405045 ]

  )

      *180/CV_PI ;

     }

    else
        _16937213055926717083 =
     0 ;

     return

  _46082575790776546 ;

 }

 void

MapInitializer ::

 _11668855431419298303 (

         const cv ::

 Mat &_2654435838, cv ::
 Mat &_175247761703, cv ::

  Mat &_175247761702, cv ::

  Mat &_2654435885 )

 {

    cv ::

Mat _2654435886,_2654435888,_175247760983 ;

    cv ::

SVD ::

 compute (

 _2654435838,_2654435888,_2654435886,_175247760983 )

          ;

    _2654435886.col (

     2 )

   .copyTo (

        _2654435885 )

   ;

    _2654435885 =

 _2654435885/cv ::

norm (

_2654435885 )
 ;

    cv :: Mat _2654435856 (

  3,3,CV_32F,cv ::
Scalar (

     0 ) )

  ;

    _2654435856.at <

    float >

   (

  0,1 )

 =

    -1 ;

    _2654435856.at < float >
     (
     1,0 )

  =
    1 ;

    _2654435856.at <

  float >

  (

    2,2 )

     =

    1 ;

    _175247761703 =

          _2654435886*_2654435856*_175247760983 ;

     if(

cv ::

  determinant (

    _175247761703 )

 <

 0 )

        _175247761703 =
    -_175247761703 ;

    _175247761702 =

    _2654435886*_2654435856.t ()

 *_175247760983 ;

     if(

 cv :: determinant (

     _175247761702 )

 <

      0 )

        _175247761702 =

     -_175247761702 ;

 }

 bool

MapInitializer :: _7274126694617365277 (
const Frame &frame, std ::

 shared_ptr <

 Map >

         _11093822290287 ) {

     int

 _18242569162703393014 =

0 ;

     for(

   size_t _markerObservation =

  0 ;

     _markerObservation <

frame.markers.size ()

     ;

       _markerObservation ++

        )
     {

         if

   ( frame.markers [

  _markerObservation ]

  .poses.err_ratio >

      _params.aruco_minerrratio_valid )

            _18242569162703393014 ++

     ;

     }

     if

      (

  _18242569162703393014 ==
0 )
     return false ;

     auto

&_18139480568557707913 =

 _11093822290287 ->

     addKeyFrame ( frame ) ;

    _18139480568557707913.pose_f2g =
       se3 (

        0,0,0,0,0,0 )

   ;

     for(

    size_t _markerObservation =

        0 ; _markerObservation <

   frame.markers.size ()
     ;

  _markerObservation ++

   )

      {

         auto

   &_1681469518277799077 =

 _11093822290287 ->

       addMarker (

     frame.markers [
    _markerObservation ]

  )

 ;

        _11093822290287 -> addMarkerObservation (

         _1681469518277799077.id,_18139480568557707913.idx )

         ;

         if

    (

        frame.markers [

_markerObservation ]

  .poses.err_ratio >

 _params.aruco_minerrratio_valid )

            _1681469518277799077.pose_g2m =

 frame.markers [ _markerObservation ]

    .poses.sols [

0 ]

  ;

         }
     return

 true ;

 }

 }